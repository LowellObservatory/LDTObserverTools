[tox]
envlist =
    {3.10,3.11,3.12,3.13}-test{,-alldeps}
    {3.10,3.11,3.12,3.13}-test-numpy{124,125,126,200,201}
    {3.10,3.11,3.12,3.13}-test-{numpy,astropy}dev
    codestyle
requires =
    setuptools >= 65.0
    pip >= 22.0
isolated_build = true

[testenv]
# Suppress display of matplotlib plots generated during docs build
setenv =
    MPLBACKEND=agg
    numpydev: PIP_EXTRA_INDEX_URL = https://pypi.anaconda.org/scipy-wheels-nightly/simple

# Pass through the following environment variables which may be needed for the CI
passenv = HOME,WINDIR,LC_ALL,LC_CTYPE,CC,CI

# Run the tests in a temporary directory to make sure that we don't import
# this package from the source tree
changedir = .tmp/{envname}

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    alldeps: with all optional dependencies
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    cov: and test coverage
    numpy124: with numpy 1.24.*
    numpy125: with numpy 1.25.*
    numpy126: with numpy 1.26.*
    numpy200: with numpy 2.0.*
    numpy201: with numpy 2.1.*

# The following provides some specific pinnings for key packages
deps =

    cov: coverage
    numpy124: numpy==1.24.*
    numpy125: numpy==1.25.*
    numpy126: numpy==1.26.*
    numpy200: numpy==2.0.*
    numpy201: numpy==2.1.*

    numpydev: numpy>=0.0.dev0
    astropydev: git+https://github.com/astropy/astropy.git#egg=astropy

# The following indicates which extras_require from setup.cfg will be installed
extras =
    test
    alldeps: pyyaml,stomp.py,xmltodict,obstools

commands =
    pip freeze
    !cov: pytest --pyargs obstools {posargs}
    cov: pytest --pyargs obstools --cov obstools --cov-config={toxinidir}/setup.cfg {posargs}
    cov: coverage xml -o {toxinidir}/coverage.xml

[testenv:codestyle]
skip_install = true
changedir = .
description = check code style, e.g. with pycodestyle
deps = pycodestyle
commands = pycodestyle obstools --count --select=E9

[testenv:conda]
description = run tests in environment created via conda
requires = tox-conda
conda_env = {toxinidir}/environment.yml
commands = pytest --pyargs obstools {posargs}
