---
name: CI Tests

on:
  workflow_dispatch:
  pull_request:
    branches: [ main, develop ]
  schedule:
    # run every Monday at 6am UTC
    - cron: '0 6 * * 1'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  SETUP_XVFB: True  # avoid issues if mpl tries to open a GUI window
  TOXARGS: '-v'

jobs:
  ci-tests:
    name: Tox env ${{ matrix.python }}-${{ matrix.toxenv }}
    permissions:
      contents: read
      pull-requests: write
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python:
          - "3.12"
        toxenv:
          - test-numpydev
          - test-astropydev
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip tox
      - name: Test with tox
        run: |
          tox -e ${{ matrix.python }}-${{ matrix.toxenv }}
      - name: Upload coverage to codecov
        if: "endsWith(matrix.tox_env, '-cov')"
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574  # v5.4.0
  os-tests:
    name: Python ${{ matrix.python }} on ${{ matrix.os }}
    permissions:
      contents: read
      pull-requests: write
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - macos-latest
          - ubuntu-latest
        python:
          - "3.10"
          - "3.11"
          - "3.12"
        toxenv:
          - test
          - test-alldeps
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip tox
      - name: Test with tox
        run: |
          tox -e ${{ matrix.python }}-${{ matrix.toxenv }}
  conda:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Conda environment check
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip tox
      - name: Run obstools tests from environment built with conda
        run: |
          tox -e conda
  codestyle:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Python codestyle check
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pycodestyle
      - name: Check for runtime errors using pycodestyle
        run: |
          pycodestyle obstools --count --select=E9
